a.include?(42)
a数组中是否含有42
a.sort
对a数组中的数字按大小排列
可以使用 push 方法向数组中添加元素，或者使用等价的 << 运算符：
>> a.push(6)                  # 把 6 加到数组末尾
=> [42, 8, 17, 6]
>> a << 7                     # 把 7 加到数组末尾
=> [42, 8, 17, 6, 7]
>> a << "foo" << "bar"        # 串联操作
=> [42, 8, 17, 6, 7, "foo", "bar"]

用 split 把字符串拆分成数组，我们还可以使用 join 方法进行相反的操作：
>> a
=> [42, 8, 17, 6, 7, "foo", "bar"]
>> a.join                       # 没有连接符
=> "4281767foobar"
>> a.join(', ')                 # 连接符是一个逗号和空格
=> "42, 8, 17, 6, 7, foo, bar"

使用 to_a 方法转换成数组
>> (0..9).to_a            # 调用 to_a 时要用括号包住值域
=> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

有个特别有用的技巧：值域的结束值使用 -1 时，不用知道数组的长度就能从起始值开始一直获取到最后一个元素：
>> a[2..-1]                         # 小技巧，索引使用 -1
=> [2, 3, 4, 5, 6, 7, 8, 9]

>> %w[a b c]                        # 再说一下，%w 用于创建元素为字符串的数组
=> ["a", "b", "c"]

>> 3.times { puts "Betelgeuse!" }   # 3.times 后跟的块没有变量
"Betelgeuse!"
"Betelgeuse!"
"Betelgeuse!"
=> 3

map 方法返回的是在数组或值域中每个元素上执行块中代码后得到的结果。
>> %w[a b c]                        # 再说一下，%w 用于创建元素为字符串的数组
=> ["a", "b", "c"]
>> %w[a b c].map { |char| char.upcase }
=> ["A", "B", "C"]
>> %w[A B C].map { |char| char.downcase }
=> ["a", "b", "c"]

使用 => 分隔的键值对这种字面量形式定义散列要简洁
>> user = { "first_name" => "Michael", "last_name" => "Hartl" }
=> {"last_name"=>"Hartl", "first_name"=>"Michael"}

name 本身是一种数据类型（符号），但 name: 却没有意义。不过在散列字面量中，:name => 和 name: 作用一样。因此，{ :name => "Michael Hartl" } 和 { name: "Michael Hartl" } 是等效的。如果要表示符号，只能使用 :name（冒号在前面）。
>> h1 = { :name => "Michael Hartl", :email => "michael@example.com" }
=> {:name=>"Michael Hartl", :email=>"michael@example.com"}
>> h2 = { name: "Michael Hartl", email: "michael@example.com" }
=> {:name=>"Michael Hartl", :email=>"michael@example.com"}
>> h1 == h2
=> true

嵌套散列
>> params = {}        # 定义一个名为 params（parameters 的简称）的散列
=> {}
>> params[:user] = { name: "Michael Hartl", email: "mhartl@example.com" }
=> {:name=>"Michael Hartl", :email=>"mhartl@example.com"}
>> params
=> {:user=>{:name=>"Michael Hartl", :email=>"mhartl@example.com"}}
>>  params[:user][:email]
=> "mhartl@example.com"

xxx.inspect它的作用是返回被调用对象的字符串字面量表示形式

